readonly SOURCE="$HOME"
readonly DEST='/storage/emulated/0/Termux/Backup'
readonly PKGS_SRC="$PREFIX/var/log/apt/history.log"
readonly program_name=$(basename "$0")

#colors
R='\e[1;31m' # red
G='\e[1;32m' # green
W='\e[1;37m' # white bold
off='\e[0m'  # turn off color
t='       '    # tab
OK=" $W[$G - $W]$off"
EXC=" $W[$R ! $W]$off"


# Banner
read -r -d '' BANNER << EOF

████████╗██╗██████╗░░█████╗░░█████╗░██╗░░██╗
╚══██╔══╝██║██╔══██╗██╔══██╗██╔══██╗██║░██╔╝
░░░██║░░░██║██████╦╝███████║██║░░╚═╝█████═╝░
░░░██║░░░██║██╔══██╗██╔══██║██║░░██╗██╔═██╗░
░░░██║░░░██║██████╦╝██║░░██║╚█████╔╝██║░╚██╗
░░░╚═╝░░░╚═╝╚═════╝░╚═╝░░╚═╝░╚════╝░╚═╝░░╚═╝ v1.0
EOF


# FUNCTIONS
function show_help() {
    printf  "${off}Usage: ${W}Tiback${off} [-h] [-b|-r [home|pkgs]]\n
    -h               print this usage
    -b [home|pkgs]   backup home and/or packages
    -r [home|pkgs]   restore home and/or packages\n"
}


function show_version() {
    grep "#$" "$0"
}


function error() {
    printf "${program_name}: $*\n" >&2
}


function check_internet() {
    if ping -q -w 1 -c 1 8.8.8.8 &> /dev/null;then
        return 0
    fi
    return 1
}


function backup_home() {
    printf  "${EXC} Backing up home\n"
    printf  "${t}${off}Please wait be patient...\n\n"

    if tar -I pigz -cf ${DEST}/backup.tmp -C ${SOURCE} . ; then
        mv ${DEST}/backup.tmp ${DEST}/home.bak
        printf  "${OK}Succesfull home backed up\n\n"

    else
        error "backup home failed!"
    fi
}
